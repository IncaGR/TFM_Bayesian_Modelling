data_date = "2023-06-05"
path_modelling = paste0("data_lm_cook_",data_date,".RDS")
test_data<- readRDS(here::here('Desktop','1_projects','TFM','1_data','2_data_Idealista',path_modelling))
?here::here
test_data<- readRDS(here::here('Documents','1_projects','TFM','1_data','2_data_Idealista',path_modelling))
test_data<- readRDS(here::here('1_projects','TFM','1_data','2_data_Idealista',path_modelling))
setwd("C:/Users/galag/Desktop/1_projects/TFM")
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/1_data_cleaning.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/2_data_aggregations.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/3_0_data_modelling.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/4_1_predictions.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/4_1_predictions.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/1_data_cleaning.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/2_data_aggregations.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/3_0_data_modelling.R", echo=TRUE)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/4_1_predictions.R", echo=TRUE)
data_idealista %>%
filter(rooms == 0 & price > 10000)
path_to_save = paste0("C:/Users/ggari/Desktop/1_projects/TFM/1_data/2_data_Idealista/3_fitted_data/model_pooled_",test,".RDS")
# modelling without the bug on rooms
# 500 mt2 with 5+ wc and 0 rooms -> scrapper does not catch
# two digits rooms
test = 'test'
path_to_save = paste0("C:/Users/ggari/Desktop/1_projects/TFM/1_data/2_data_Idealista/3_fitted_data/model_pooled_",test,".RDS")
path_to_save
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/3_1_stan_code.R", echo=TRUE)
path_to_save = paste0("C:/Users/ggari/Desktop/1_projects/TFM/1_data/2_data_Idealista/3_fitted_data/model_pooled",test,".RDS")
saveRDS(fit_pooled, path_to_save)
path_to_save = paste0("1_data/2_data_Idealista/3_fitted_data/model_pooled",test,".RDS")
saveRDS(fit_pooled, path_to_save)
N= nrow(data_cook)
barri_name <- unique(data_cook$barri)
barri <- as.numeric(data_cook$barri)
J <- length(unique(barri))
y <- data_cook$log_price
x1 <- log(data_cook$square_mt)
x2 <- data_cook$rooms2_1
x3 <- data_cook$rooms2_2
x4 <- data_cook$rooms2_3
x5 <- data_cook$rooms2_4
x6 <- data_cook$asc
x7 <- data_cook$wc2_2
x8 <- data_cook$wc2_3
x9 <- data_cook$wc2_4
x10 <- data_cook$terraza
x11 <- data_cook$amueblado
x12 <- data_cook$lujo
data_list <- list(
N = N,
y = y,
J = J,
x1 = x1,
x2 = x2,
x3 = x3,
x4 = x4,
x5 = x5,
x6 = x6,
x7 = x7,
x8 = x8,
x9 = x9,
x10 = x10,
x11 = x11,
x12 = x12,
barri = barri
)
model_code <- "
data {
int<lower=0> N;
int<lower=0> J;
vector[N] y;
real x1[N];
int x2[N];
int x3[N];
int x4[N];
int x5[N];
int x6[N];
int x7[N];
int x8[N];
int x9[N];
int x10[N];
int x11[N];
int x12[N];
int barri[N];
}
parameters {
real b0[J];
real log_smt; // log square mt
real rooms2_1 ; // rooms
real rooms2_2; // rooms
real rooms2_3; // rooms
real rooms2_4; // rooms
real asc; // asc
real wc2_2; // wc
real wc2_3; // wc
real wc2_4; // wc
real terraza;
real amueblado;
real lujo;
real<lower=0> sigma_y;
}
model {
b0 ~ cauchy(0,10);
log_smt ~ cauchy(0,2.5);
rooms2_1 ~ cauchy(0,2.5);
rooms2_2 ~ cauchy(0,2.5);
rooms2_3 ~ cauchy(0,2.5);
rooms2_4 ~ cauchy(0,2.5);
asc ~ cauchy(0,2.5);
wc2_2 ~ cauchy(0,2.5);
wc2_3 ~ cauchy(0,2.5);
wc2_4 ~ cauchy(0,2.5);
terraza ~ cauchy(0,2.5);
amueblado ~ cauchy(0,2.5);
lujo ~ cauchy(0,2.5);
for (n in 1:N)
y[n] ~ normal(b0[barri[n]] + log_smt * x1[n] + rooms2_1 * x2[n] +
rooms2_2 * x3[n] + rooms2_3 * x4[n] + rooms2_4 * x5[n] +
asc * x6[n] + wc2_2 * x7[n] + wc2_3 * x8[n] + wc2_4 * x9[n] +
terraza * x10[n] + amueblado * x11[n] + lujo * x12[n],
sigma_y);
}
"
translate = stanc(model_code  = model_code)
model = stan_model(stanc_ret = translate)
# Fit the model to the data
fit_no_pooled <- sampling(model, data = data_list, chains = 4, iter =4000, verbose = TRUE, seed = 123) # 4000?
#
# ## Convergence analysis
print(fit_no_pooled)
path_to_save = paste0("1_data/2_data_Idealista/3_fitted_data/model_no_pooled",test,".RDS")
saveRDS(fit_no_pooled, path_to_save)
N= nrow(data_cook)
barri_name <- unique(data_cook$barri)
barri <- as.integer((data_cook$barri))
J <- length(unique(barri))
y <- data_cook$log_price
x1 <- log(data_cook$square_mt)
x2 <- data_cook$rooms
tmp_map = data.frame(barri_name = levels(data_cook$barri), term = rep(1:65))
data_list <- list(
N = N,
y = y,
J = J,
x1 = x1,
x2 = x2,
x3 = x3,
x4 = x4,
x5 = x5,
x6 = x6,
x7 = x7,
x8 = x8,
x9 = x9,
x10 = x10,
x11 = x11,
x12 = x12,
barri = barri
)
model_code <- "
data {
int<lower=0> N;
int<lower=0> J;
vector[N] y;
real x1[N];
int x2[N];
int x3[N];
int x4[N];
int x5[N];
int x6[N];
int x7[N];
int x8[N];
int x9[N];
int x10[N];
int x11[N];
int x12[N];
int barri[N];
}
parameters {
real b0[J];
real log_smt; // log square mt
real rooms2_1 ; // rooms
real rooms2_2; // rooms
real rooms2_3; // rooms
real rooms2_4; // rooms
real asc; // asc
real wc2_2; // wc
real wc2_3; // wc
real wc2_4; // wc
real terraza;
real amueblado;
real lujo;
real mu_a;
real<lower=0> sigma_y;
real<lower=0> sigma_a;
}
model {
sigma_y ~ cauchy(0, 10);
sigma_a ~ cauchy(0, 10);
log_smt ~ cauchy(0,2.5);
rooms2_1 ~ cauchy(0,2.5);
rooms2_2 ~ cauchy(0,2.5);
rooms2_3 ~ cauchy(0,2.5);
rooms2_4 ~ cauchy(0,2.5);
asc ~ cauchy(0,2.5);
wc2_2 ~ cauchy(0,2.5);
wc2_3 ~ cauchy(0,2.5);
wc2_4 ~ cauchy(0,2.5);
terraza ~ cauchy(0,2.5);
amueblado ~ cauchy(0,2.5);
lujo ~ cauchy(0,2.5);
b0 ~ normal(mu_a, sigma_a);
for (n in 1:N)
y[n] ~ normal(b0[barri[n]] + log_smt * x1[n] + rooms2_1 * x2[n] +
rooms2_2 * x3[n] + rooms2_3 * x4[n] + rooms2_4 * x5[n] +
asc * x6[n] + wc2_2 * x7[n] + wc2_3 * x8[n] + wc2_4 * x9[n] +
terraza * x10[n] + amueblado * x11[n] + lujo * x12[n], sigma_y);
}
"
translate = stanc(model_code  = model_code)
model = stan_model(stanc_ret = translate)
# Fit the model to the data
fit_hier <- sampling(model, data = data_list, chains = 4, iter =5000, verbose = TRUE,seed = 1568) # 4000?
#
# ## Convergence analysis
print(fit_hier)
path_to_save = paste0("1_data/2_data_Idealista/3_fitted_data/model_hierarchical_2",test,".RDS")
saveRDS(fit_hier, path_to_save)
source("C:/Users/galag/Desktop/1_projects/TFM/2_code/2_R_code/3_2_hierarchical_covariate.R", echo=TRUE)

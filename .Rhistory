data_date = "2023-06-05"
path_modelling = paste0("data_lm_cook_",data_date,".RDS")
test_data<- readRDS(here::here('Desktop','1_projects','TFM','1_data','2_data_Idealista',path_modelling))
?here::here
test_data<- readRDS(here::here('Documents','1_projects','TFM','1_data','2_data_Idealista',path_modelling))
test_data<- readRDS(here::here('1_projects','TFM','1_data','2_data_Idealista',path_modelling))
setwd("C:/Users/galag/Desktop/1_projects/TFM")
library(tidyverse)
library(car)
library(here)
library(broom)
library(broom.mixed)
library(rstan)
library(bayesplot)
# upload data ready for modelling ------------------------------------------
options(mc.cores = parallel::detectCores())
rstan_options(auto_write=TRUE )
# install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
#                  type="source",repos=NULL)
packageVersion("StanHeaders")
packageVersion("rstan")
install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
type="source",repos=NULL)
detach("package:StanHeaders", unload = TRUE)
remove.packages("StanHeaders")
install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
type="source",repos=NULL)
install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
type="source",repos=NULL)
library(tidyverse)
library(car)
library(here)
library(broom)
library(broom.mixed)
library(rstan)
library(bayesplot)
# upload data ready for modelling ------------------------------------------
options(mc.cores = parallel::detectCores())
rstan_options(auto_write=TRUE )
# install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
#                  type="source",repos=NULL)
packageVersion("StanHeaders")
packageVersion("rstan")
data_date = "2023-05-03"
path_modelling = paste0("data_lm_cook_",data_date,".RDS")
data_cook<- readRDS(here::here('1_data','2_data_Idealista',path_modelling))
data_cook$barri <- as.factor(data_cook$barri)
N= nrow(data_cook)
barri_name <- unique(data_cook$barri)
barri <- as.numeric(data_cook$barri)
J <- length(unique(barri))
y <- data_cook$log_price
x1 <- log(data_cook$square_mt)
x2 <- data_cook$rooms2_1
x3 <- data_cook$rooms2_2
x4 <- data_cook$rooms2_3
x5 <- data_cook$rooms2_4
x6 <- data_cook$asc
x7 <- data_cook$wc2_2
x8 <- data_cook$wc2_3
x9 <- data_cook$wc2_4
x10 <- data_cook$terraza
x11 <- data_cook$amueblado
x12 <- data_cook$lujo
data_list <- list(
N = N,
y = y,
x1 = x1,
x2 = x2,
x3 = x3,
x4 = x4,
x5 = x5,
x6 = x6,
x7 = x7,
x8 = x8,
x9 = x9,
x10 = x10,
x11 = x11,
x12 = x12
)
model_code <- "
data {
int<lower=0> N;
vector[N] y;
vector<lower=0>[N] x1;
vector<lower=0>[N] x2;
vector<lower=0>[N] x3;
vector<lower=0>[N] x4;
vector<lower=0>[N] x5;
vector<lower=0>[N] x6;
vector<lower=0>[N] x7;
vector<lower=0>[N] x8;
vector<lower=0>[N] x9;
vector<lower=0>[N] x10;
vector<lower=0>[N] x11;
vector<lower=0>[N] x12;
}
parameters {
real b0;
real log_mt; // log square mt
real rooms2_1 ; // rooms
real rooms2_2; // rooms
real rooms2_3; // rooms
real rooms2_4; // rooms
real asc; // asc
real wc2_2; // wc
real wc2_3; // wc
real wc2_4; // wc
real terraza; // rooms
real amueblado; // rooms
real lujo; // rooms
real<lower=0> sigma_y;
}
model {
b0 ~ cauchy(0,10);
log_mt ~ cauchy(0,2.5);
rooms2_1 ~ cauchy(0,2.5);
rooms2_2 ~ cauchy(0,2.5);
rooms2_3 ~ cauchy(0,2.5);
rooms2_4 ~ cauchy(0,2.5);
asc ~ cauchy(0,2.5);
wc2_2 ~ cauchy(0,2.5);
wc2_3 ~ cauchy(0,2.5);
wc2_4 ~ cauchy(0,2.5);
terraza ~ cauchy(0,2.5);
amueblado ~ cauchy(0,2.5);
lujo ~ cauchy(0,2.5);
y ~ normal(b0 + log_mt * x1 + rooms2_1 * x2 + rooms2_2 * x3 + rooms2_3 * x4 + rooms2_4 * x5 +
asc * x6 + wc2_2 * x7 + wc2_3 * x8 + wc2_4 * x9 +
terraza * x10 + amueblado * x11 + lujo * x12, sigma_y);
}
"
model = stan_model(model_code = model_code)
library(tidyverse)
library(car)
library(here)
library(broom)
library(broom.mixed)
library(rstan)
library(bayesplot)
# upload data ready for modelling ------------------------------------------
options(mc.cores = parallel::detectCores())
rstan_options(auto_write=TRUE )
# install.packages("https://cran.r-project.org/src/contrib/Archive/StanHeaders/StanHeaders_2.21.0-7.tar.gz",
#                  type="source",repos=NULL)
packageVersion("StanHeaders")
packageVersion("rstan")
data_date = "2023-05-03"
path_modelling = paste0("data_lm_cook_",data_date,".RDS")
data_cook<- readRDS(here::here('1_data','2_data_Idealista',path_modelling))
data_cook$barri <- as.factor(data_cook$barri)
N= nrow(data_cook)
barri_name <- unique(data_cook$barri)
barri <- as.numeric(data_cook$barri)
J <- length(unique(barri))
y <- data_cook$log_price
x1 <- log(data_cook$square_mt)
x2 <- data_cook$rooms2_1
x3 <- data_cook$rooms2_2
x4 <- data_cook$rooms2_3
x5 <- data_cook$rooms2_4
x6 <- data_cook$asc
x7 <- data_cook$wc2_2
x8 <- data_cook$wc2_3
x9 <- data_cook$wc2_4
x10 <- data_cook$terraza
x11 <- data_cook$amueblado
x12 <- data_cook$lujo
data_list <- list(
N = N,
y = y,
x1 = x1,
x2 = x2,
x3 = x3,
x4 = x4,
x5 = x5,
x6 = x6,
x7 = x7,
x8 = x8,
x9 = x9,
x10 = x10,
x11 = x11,
x12 = x12
)
model_code <- "
data {
int<lower=0> N;
vector[N] y;
vector<lower=0>[N] x1;
vector<lower=0>[N] x2;
vector<lower=0>[N] x3;
vector<lower=0>[N] x4;
vector<lower=0>[N] x5;
vector<lower=0>[N] x6;
vector<lower=0>[N] x7;
vector<lower=0>[N] x8;
vector<lower=0>[N] x9;
vector<lower=0>[N] x10;
vector<lower=0>[N] x11;
vector<lower=0>[N] x12;
}
parameters {
real b0;
real log_mt; // log square mt
real rooms2_1 ; // rooms
real rooms2_2; // rooms
real rooms2_3; // rooms
real rooms2_4; // rooms
real asc; // asc
real wc2_2; // wc
real wc2_3; // wc
real wc2_4; // wc
real terraza; // rooms
real amueblado; // rooms
real lujo; // rooms
real<lower=0> sigma_y;
}
model {
b0 ~ cauchy(0,10);
log_mt ~ cauchy(0,2.5);
rooms2_1 ~ cauchy(0,2.5);
rooms2_2 ~ cauchy(0,2.5);
rooms2_3 ~ cauchy(0,2.5);
rooms2_4 ~ cauchy(0,2.5);
asc ~ cauchy(0,2.5);
wc2_2 ~ cauchy(0,2.5);
wc2_3 ~ cauchy(0,2.5);
wc2_4 ~ cauchy(0,2.5);
terraza ~ cauchy(0,2.5);
amueblado ~ cauchy(0,2.5);
lujo ~ cauchy(0,2.5);
y ~ normal(b0 + log_mt * x1 + rooms2_1 * x2 + rooms2_2 * x3 + rooms2_3 * x4 + rooms2_4 * x5 +
asc * x6 + wc2_2 * x7 + wc2_3 * x8 + wc2_4 * x9 +
terraza * x10 + amueblado * x11 + lujo * x12, sigma_y);
}
"
model = stan_model(model_code = model_code)
